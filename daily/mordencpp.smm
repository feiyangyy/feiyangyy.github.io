{"layout":"logicalStructure","root":{"data":{"text":"<p>MordenCPP(11-14)</p>","expand":true,"uid":"9c4a426d-45b4-4be0-9657-b4cb32a8d48a","richText":true,"isActive":false,"imgMap":{}},"children":[{"data":{"text":"<p>模板和类型推导</p>","uid":"6fea2ce1-61ee-4263-9e2a-767e13ef040a","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>TMP</p>","uid":"9e857d83-db4d-4b12-ac84-8dd5b3905f45","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>可变模板参数</p>","uid":"c3da3cc0-9474-4cd8-8ea5-09419b3a98b0","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>类型推导</p>","uid":"e848eb47-d658-4e7f-86bd-8ada4b8a9c03","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>auto 类型推导</p>","uid":"139558a3-d05d-455c-9ec6-65d0df92abd9","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>常规的节省类型声明</p>","uid":"cd26a3d7-0b28-4f72-ae4e-bd230fc40a46","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>自动推导返回值，以匹配不同的函数调用</p>","uid":"96cd2d58-2313-448f-adb8-928691a470bc","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>模板类型推导</p>","uid":"18aa544e-b789-41ed-94d1-9bc21b659c27","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>enum class</p>","uid":"dac4c97d-0df3-4891-ba35-4a5cde08d8c3","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>别称限域枚举</p>","uid":"855cdfbd-5dd9-462b-ab0b-5fc5cbafb09d","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>传统enum 称非限域枚举，即作用于全局</p>","uid":"5f5b6f75-9fe7-417c-9312-16dfc785980b","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>枚举元素命名冲突</p>","uid":"bb14ad23-c96a-4a65-90e3-0b6a09d3f60d","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>也可以使用namespace/在class中声明隔离</p>","uid":"c6bef5c3-dddc-4f00-859f-9c1d0493bd17","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>优点</p>","uid":"7ce74a02-08c8-41ae-b4d2-1c5d2fdeb7e7","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>隔离作用域，enum class A 和 enum class B 中包含相同的元素，不会产生冲突</p>","uid":"7b0738f5-7c19-40b2-8181-cd8d013e3660","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>通过public: uint32_t （基础类型） 等可以指定底层存储方式</p>","uid":"022abab6-af50-4aca-9ee0-5a5d0aade2d9","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>比如，少量定义的枚举可以使用int8_t 提高效率</p>","uid":"5c67c476-2884-4d12-a70b-4ba76a54a086","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>避免隐士类型转换</p>","uid":"e717856c-0a83-459a-87d1-84eacbf4a1a8","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>enum class 需要调用cast 才能转换成int</p>","uid":"0dde1fa7-58af-4133-9599-31f69547bc87","expand":true,"richText":true,"isActive":false},"children":[]}]}]}]},{"data":{"text":"<p>override</p>","uid":"564b13da-2a88-4597-89d1-254f8b4230fd","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>作用</p>","uid":"641b048b-bcae-43bd-9bd5-b993a49a4cc4","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>指明覆盖基类虚函数实现，且基类必须声明有具体的虚函数，否则报错</p>","uid":"ee02c5e5-5c91-470a-b9f9-e80b66980bc7","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>优势</p>","uid":"966f7c5d-f529-4429-a2ca-59db2d58891d","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>明确覆盖意图</p>","uid":"1a979721-7ffa-46c8-bdfd-5a5ff9078b84","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>确保基类有对应接口声明</p>","uid":"72b53009-1206-484e-8578-a1a9df1c9e03","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>避免因为笔误，造成想要覆盖而未实际覆盖的问题</p>","uid":"02acc2b0-2c5c-4a40-b2a6-ca26c87ed316","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>在多层继承体系下，可能会造成难以调试的bug</p>","uid":"063c68a1-b28d-4960-a3cd-9c64bfebbeb2","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>final</p>","uid":"9d34b94b-3086-4b13-910f-c52409e14d77","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>配合final可以阻止派生类进一步覆盖</p>","uid":"d05e6c99-f00e-49b6-a152-3081c7e5ff15","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>thread</p>","uid":"2449d7f6-7874-4764-be1f-84e1ba2845db","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>五驾马车</p>","uid":"0c123b7d-cc46-4363-a734-c7c528c72d37","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>默认构造</p>","uid":"669dea47-6341-4664-9a5a-d5bcdd89ee71","expand":true,"richText":true,"isActive":false,"outerFrame":{"groupId":"b841ad40-ef7a-4b2d-8d4b-c62a3a42e09d","text":"逐个调用成员的默认构造/拷贝构造 ...  etc."}},"children":[]},{"data":{"text":"<p>拷贝构造</p>","uid":"08cbb65c-c90e-4606-9673-2ade8e0cc8d3","expand":true,"richText":true,"isActive":false,"outerFrame":{"groupId":"b841ad40-ef7a-4b2d-8d4b-c62a3a42e09d","text":"逐个调用成员的默认构造/拷贝构造 ...  etc."}},"children":[]},{"data":{"text":"<p>拷贝赋值</p>","uid":"3b283d95-bf6a-4f5d-90c4-2b307884adc8","expand":true,"richText":true,"isActive":false,"outerFrame":{"groupId":"b841ad40-ef7a-4b2d-8d4b-c62a3a42e09d","text":"逐个调用成员的默认构造/拷贝构造 ...  etc."}},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">移动构造</span></p>","uid":"79aca2fd-1d57-4e65-b675-cca760a7187f","expand":true,"richText":true,"isActive":false,"outerFrame":{"groupId":"b841ad40-ef7a-4b2d-8d4b-c62a3a42e09d","text":"逐个调用成员的默认构造/拷贝构造 ...  etc."}},"children":[{"data":{"text":"<p>如果定义了析构函数，则不会自动生成</p>","uid":"351de086-d399-468b-a183-0324e938b968","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>编译器假定用户自己管理资源</p>","uid":"a48677d8-8ea1-464f-bdff-e47103ddb034","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">移动赋值</span></p>","uid":"3fdfb472-2a1c-4a0f-8bc6-879273bfe847","expand":true,"richText":true,"isActive":false,"associativeLineTargets":["351de086-d399-468b-a183-0324e938b968"],"associativeLineTargetControlOffsets":[[{"x":94.5,"y":0},{"x":-94.5,"y":0}]],"associativeLinePoint":[{"startPoint":{"x":1897,"y":1271,"dir":"right"},"endPoint":{"x":2086,"y":1233,"dir":"bottom"}}],"outerFrame":{"groupId":"b841ad40-ef7a-4b2d-8d4b-c62a3a42e09d","text":"逐个调用成员的默认构造/拷贝构造 ...  etc."}},"children":[]},{"data":{"text":"<p>默认析构</p>","uid":"921941e6-e203-46d2-b4e9-9f28e3feffb2","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>模板相关</p>","uid":"5ee7e8d9-af1e-4fc2-a926-bbee27df1141","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>using vs typedef</p>","uid":"d72738ca-56ea-41ee-b8ab-eccc6f0a831c","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>using 更清晰</p>","uid":"5d47975c-203d-4621-b589-93a2604ab83b","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>using 可以定义模板别名，typedef 不行</p>","uid":"0c6ad20f-0ec9-426f-aae6-252f616a7dc1","expand":true,"richText":true,"isActive":false},"children":[]}]}]}],"smmVersion":"0.14.0-fix.1"},"theme":{"template":"classic4","config":{}},"view":{"transform":{"scaleX":1,"scaleY":1,"shear":0,"rotate":0,"translateX":-656,"translateY":-489,"originX":0,"originY":0,"a":1,"b":0,"c":0,"d":1,"e":-656,"f":-489},"state":{"scale":1,"x":-656,"y":-489,"sx":0,"sy":0}}}