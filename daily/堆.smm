{"layout":"logicalStructure","root":{"data":{"text":"<p>堆</p>","expand":true,"uid":"a3879826-ede3-4561-9dbb-2932f484abbd","richText":true,"isActive":false,"imgMap":{}},"children":[{"data":{"text":"<p>一种完全二叉树</p>","uid":"4d90111e-3d79-47c9-93c8-ca031e2705c4","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>除最后一层外，其余每层均填满</p>","uid":"74d59ec4-82ac-4949-a27c-21aba28dac0a","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>从左到右填充</p>","uid":"b0b5913b-7e4e-455e-ad24-dca99a1b163c","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>i=1 是根节点</p>","uid":"89d70fa2-d5ce-4c2e-9eef-5db75ed5b160","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>i&gt;1, i/2是其父节点</p>","uid":"bf0a5db1-0d9b-4961-b746-7944e25c82b5","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>总结点数为n</p>","uid":"97d83be5-0fe0-4f34-8db3-1b5003cb2874","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>如果2i &gt; n, 则i 无左子节点</p>","uid":"79280275-7183-4679-8252-5704fd6bd367","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>如果2i &lt;=n, 则2i是左子节点</p>","uid":"a452c8db-4e0c-48a5-a291-167dd728d273","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>如果(2i+1) &gt;n, 则。。。。无右子节点</p>","uid":"6edbaf59-ad0d-46b7-b654-d986fe06eb28","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>..... 同上条件</p>","uid":"3984c19c-2b0d-4a98-b2e2-b042779f3261","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>左子2i, 右子2i+1</p>","uid":"df3c1dc3-3366-4c73-bef3-37dc1b5f4a6f","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">假设节点从位置1开始</span></p>","uid":"e7187edd-3e58-450a-a9c2-682bf00e36ca","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">可以用数组实现</span></p>","uid":"ef8390f6-665a-4489-8e4b-47a0b01162e1","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>父节点小于子节点值</p>","uid":"8afe8ff6-137a-4314-844c-38c3d466043a","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>小根堆，大根堆同理</p>","uid":"83ae6450-cc00-49ae-adae-c0a0d3ed6b52","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>不是<span style=\"color: rgb(244, 78, 59);\">排序树</span></p>","uid":"0bef6bb9-d7ff-4b1e-8e67-e99c0306beea","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>中序遍历不有序</p>","uid":"4fd78a56-2406-4d40-b20a-e3a65c67dd12","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>也是递归定义，左右子树都满足堆定义</p>","uid":"35da81e6-1595-4805-b8db-bec58b032f1f","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>堆的插入</p>","uid":"17e1af57-588e-4be3-8a91-7d1da387070a","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">放到末尾（堆底）</span></p>","uid":"7cdfaf07-7d94-4271-8303-9b3435516547","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>逐渐比较和上浮</p>","uid":"80ce3271-1510-4f46-8802-e5e3d9b52d65","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>a[k] 比较 a[k/2]，如果a[k] 小则交换</p>","uid":"0477a052-454a-4770-9b1e-fafa0d98ed48","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>假设a[k] 是右子节点，如果 a[k] &lt; a[k/2]，那么其一定小于[k/2]的左子节点</p>","uid":"ea42f485-7d6a-458c-8e0a-b3247fc59576","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>继续上浮</p>","uid":"08f07415-7f98-4fac-8914-f4297e6ce5a7","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>直到满足堆性质（不比父节点小）</p>","uid":"aabba1f5-9fd3-4787-af53-94ad1c9df62d","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>到达根</p>","uid":"1774bd97-cdf3-4b2f-a08e-7d2c294b2240","expand":true,"richText":true,"isActive":false},"children":[]}]}]}]},{"data":{"text":"<p>堆的删除</p>","uid":"4c5ec65b-b172-4793-b254-5a4ff248cdfa","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">只能从根删除</span></p>","uid":"74b9735b-82c3-4a75-8418-61a4c672fee4","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>删除根元素</p>","uid":"a75548cb-d3ac-4e72-9b41-0907c47a60e5","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>把末尾的元素放到根位置</p>","uid":"db375862-26ce-4943-9505-9d66d49c587b","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>进行下沉比较</p>","uid":"81f4e39f-3516-48ea-b4b9-4d36afd2c4c9","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>找到左右子节点中的最小者，和最小者比较</p>","uid":"51d4d962-8891-45a6-80a6-38015b0080da","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">min(l, r) 一定比下一层的元素都小</span></p>","uid":"fc2b0b6b-3e60-4e95-aceb-036d872383d1","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>联系堆的定义</p>","uid":"daacfd0a-d260-464e-b606-7a557d1d9b00","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>如果大于最小者，则与其交换，交换后，被交换的子树（堆）需要继续平衡，直到满足条件</p>","uid":"78ea6c58-bacd-4b5c-9e4c-c0b7abefb81f","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>C++中的体现</p>","uid":"02bbdfd3-ed9e-4cfd-9583-2341760a02c4","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>std::priority_queue</p>","uid":"4b5c4510-0b86-46bf-8245-1dcc3355f3cf","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>解决的问题：top_k 问题，特别是流数据（无法排序）或者海量数据的top_k 问题</p>","uid":"afed769e-eee1-40ab-9637-bde8a73f5c0e","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>topk 问题</p>","uid":"907304a5-3e9b-4685-af6e-effd944abd4d","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>找最小k元素</p>","uid":"ccb072dd-78e4-4ce3-8584-81946ea4d08b","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>定义一个大根堆，根是最大值</p>","uid":"b8834570-e860-4513-b6fd-366b79cb5f76","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>根容量设置为k</p>","uid":"f3f1691d-0eb4-48a4-9311-a9a7d845c79d","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>遍历集合元素，输入数量超过k时，<span style=\"color: rgb(244, 78, 59);\">和堆根比较</span>，小于根则删除堆根，并插入此元素</p>","uid":"4af9e0c9-3653-4494-a392-aa0b6fed2e69","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>不断遍历，直到处理完毕</p>","uid":"c5c77586-0211-453e-ac2d-be5614968c99","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>堆排序</p>","uid":"89e52103-3035-467e-9d1e-f3d0f64e3c9b","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>定义小根堆</p>","uid":"33cbeda4-5e79-42da-8243-8353799c8565","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>输入序列构建堆</p>","uid":"83032348-2ab9-49dd-83ee-0a2731c3aa08","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>不断地从堆中拿出元素</p>","uid":"ab124499-ff4a-4174-82ca-aa03d2f146ec","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>堆排序性能相对于简单排序稍高，但需构建堆，并不断弹出</p>","uid":"4c36a25c-a226-4a48-adbb-c78815add431","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>缓存不友好（非连续访问）</p>","uid":"58b3a303-57b4-4d3e-9a47-405e36b125e0","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>原地排序，且可以非递归实现，嵌入式设备友好</p>","uid":"66d94b55-f61a-454c-8236-976d65a073cc","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">中位数维护</span></p>","uid":"78b3922e-94b9-40ec-ba37-f7869a7cf837","expand":true,"richText":true,"isActive":false},"children":[]}],"smmVersion":"0.14.0-fix.1"},"theme":{"template":"classic4","config":{}},"view":{"transform":{"scaleX":1,"scaleY":1,"shear":0,"rotate":0,"translateX":-412,"translateY":-931.5,"originX":0,"originY":0,"a":1,"b":0,"c":0,"d":1,"e":-412,"f":-931.5},"state":{"scale":1,"x":-412,"y":-931.5,"sx":-412,"sy":-931.5}}}