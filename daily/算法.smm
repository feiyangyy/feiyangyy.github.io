{"layout":"logicalStructure","root":{"data":{"text":"<p>算法</p>","expand":true,"uid":"2ab02b65-d1ba-4bd4-bca8-9ce3dfd56b5b","richText":true,"isActive":false,"imgMap":{}},"children":[{"data":{"text":"<p>排序</p>","uid":"460ed44b-f1f4-423a-ab79-1a2389d581e2","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>选排</p>","uid":"1d1821a3-942b-4e40-8d6e-43dcf2c2cc0f","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>序列分为左右，左侧为有序，右侧无序</p>","uid":"81d9973a-da97-4368-a52c-4d0c352bf95b","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>每次遍历右侧，选择最小的和第一个交换，并缩减右侧序列</p>","uid":"9ddef258-875c-4830-8029-f1c61f979efd","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>复杂度O(n^2)</p>","uid":"8f7f7985-b760-4d37-b7d2-66a037a645d5","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>插排</p>","uid":"07e134b9-fcba-474c-8764-f3f32134301a","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>序列分左右，左有序，右无序</p>","uid":"36b9575e-1d5e-4f6a-a3b9-dfedb386a88a","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>每次遍历右，从中选择最小的，然后在左侧寻找插入位置。在寻找插入位置时是从后往前找。</p>","uid":"1d15d770-b552-49d3-9d25-cf9d210b6171","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>插入后，元素位置要后移</p>","uid":"3253b3db-dcac-4ce6-905f-b3bbd7335d94","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>希尔排序</p>","uid":"e03bad15-6749-4d69-8474-ae9c40b8c811","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>以一定步长做插排，步长最后为1，不太稳定</p>","uid":"4e541cf2-722d-417c-b12b-7f1b48685b06","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">归排</span></p>","uid":"7cb95922-d5b2-435c-89fd-df315297e02f","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>递归版本</p>","uid":"fa642264-e934-43ad-a4ca-40429025e64e","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>从大到小切分(Sort)</p>","uid":"8ab0ac3a-d770-4e97-aee6-d501663838cd","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>切分就是递归</p>","uid":"5bfe3b73-0a0c-4859-a01e-ebdc5e7159fb","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>递归出口: 只有一个元素</p>","uid":"6745decd-bb8f-45b9-badd-ee1c15b1c824","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>从小到大合并 排序 （Merge）</p>","uid":"dcab64da-67c2-460b-9b99-84429b63249c","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>三个元素[l, mid) [mid, r)</p>","uid":"691a7e8d-9919-4656-8609-dd06b62ef1ba","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>左指针 li, 右指针ri, 范围见上</p>","uid":"249fd144-0346-4633-ad1f-f4c7acc96f35","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>li和ri 同时遍历，谁小存储谁</p>","uid":"4a627dc8-e6a0-4069-acd7-55c6c8240d2b","expand":true,"richText":true,"isActive":false,"outerFrame":{"groupId":"c71a202f-edec-4e2f-b18f-1143e11cbee7","text":"循环"}},"children":[]},{"data":{"text":"<p>消耗剩余的部分</p>","uid":"0145edbd-8993-4ec7-a3eb-4032db93bddf","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>复制回原先的数组</p>","uid":"8c7b2654-4bbe-4ecf-967a-7c8e8fa55488","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>非递归版本</p>","uid":"d2cc7647-b5de-4165-9f29-87a852b90626","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>选择步长，从小到大</p>","uid":"d61e12b7-3516-42eb-82e8-82b815527bfc","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>代价：复杂度O(nlogn), 空间复杂度O(n)</p>","uid":"bf3a07a2-ad01-449e-9f1c-b3e15a9a84b3","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>每次从中间切分，切分次数约为log(n)</p>","uid":"1d812793-92cc-43e3-8260-3d4112debc2f","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>每层合并，约需要n次比较</p>","uid":"ad376b4a-af9d-44fa-af70-56d586ca826c","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>每层合并，需要一个辅助存储以接收顺序化的数据，并存储到原序列中</p>","uid":"b8d8f609-a00e-437e-93a0-d60aa768675e","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"color: rgb(211, 49, 21);\">链表归排</span></p>","uid":"78499c5b-a363-4fee-ab4b-aa54809dfc00","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>std::list 的sort 实现</p>","uid":"4567d3bb-67ce-415f-8049-3bd30b8b9a3d","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">快排</span></p>","uid":"e83ba747-9ff4-4195-8c0c-9a8253374574","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>要求随机访问</p>","uid":"16fb8bec-0dda-4aea-894f-4661774f777f","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>分治思想</p>","uid":"dcbc1530-9713-4d30-b1bc-f84c430a8e6f","expand":true,"richText":true,"isActive":false,"generalization":[{"text":"<p>最重要部分</p>","range":[0,2],"uid":"a519423f-bc3f-4e22-b8a9-c73bf0dcdcc6","richText":true,"isActive":false,"expand":true},{"text":"<p>重复上面的选择+调序过程</p><p>性能不稳定的根源：左右子序列的长度</p>","range":[2,3],"uid":"7cb4a5e4-ad68-4424-9edf-0e5f59a54e85","richText":true,"isActive":false,"expand":true}]},"children":[{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">随机</span>选择一个元素</p>","uid":"97b88507-e956-4e6d-9d52-02f037c1f431","expand":true,"richText":true,"isActive":false,"generalization":[]},"children":[{"data":{"text":"<p>序列的第一个元素</p>","uid":"59bc8090-d904-4c07-aa54-c9e06ef8c5da","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>两个指针，pointer_left and pointer_right</p>","uid":"5e722cad-f10f-41d5-ad90-d8acbd9cd859","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>输入序列[l,r]</p>","uid":"8f52b346-695e-4a90-b0d9-997168281cf9","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>pl = seq[0]</p>","uid":"0b9399f0-a6e5-4156-b1a5-f820d16d6a60","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>pr = seq[-1]</p>","uid":"d6e2a809-1ab7-449b-91a7-ea50a39106be","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>边界条件</p>","uid":"682c0de4-fdaa-45f7-93b3-5f0693268e77","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>序列只有2个元素</p>","uid":"75e053d1-44fa-4d44-94ab-04f9b0b82c50","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>比较大小交换</p>","uid":"51f4cc11-08f5-4059-9399-78f2d5e5511d","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>只有1个</p>","uid":"88b20ba0-7ec3-4b6b-870c-ac37bfbc635b","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>立刻返回</p>","uid":"e5deeb8f-6692-4e97-97cb-b1d958e7e71c","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>pointer 这里的含义是索引</p>","uid":"f0a80585-8084-461a-86a0-da0eb36a62de","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>调序</p>","uid":"8295f319-3c9e-41fd-89ac-1858a392552f","expand":true,"richText":true,"isActive":false,"number":{"type":1,"level":1}},"children":[{"data":{"text":"<p>所有 &lt; 此元素的元素调整到此元素左边</p>","uid":"e50d40f4-c494-4f83-8437-9d4476d00d08","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>所有&gt;此元素的 调整到此元素右边</p>","uid":"ba6481ef-d78e-42b7-afbc-478a198965ab","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>返回分界点</p>","uid":"4b2a1b04-3ce1-4e1a-afb8-1e985414733c","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>操作</p>","uid":"1eacb6b0-e61d-44ab-b516-c612f3041928","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>循环 while(pl &lt; pr)</p>","uid":"8d54e666-acec-48a4-8f59-b1297b824b3e","expand":true,"richText":true,"isActive":false,"number":{"type":1,"level":1},"generalization":[{"text":"<p>这里的顺序很重要</p>","range":[0,1],"uid":"014b159d-7325-4c54-89ca-c054818e0bc1","richText":true,"isActive":false,"expand":true},{"text":"<p>总结一个断言: 我们选择seq[0]作为随机的元素，<span style=\"color: rgb(244, 78, 59);\">那么pl 从左</span></p><p><span style=\"color: rgb(244, 78, 59);\">往右找到末尾时和pr相等，最末尾的元素可能&gt;= seq[0]，可能破坏结果断言</span></p><p>从右往左时，pr 到达第一个元素，pr = pl, 此时pr 一定&gt;= seq[0] 不会破坏结果断言</p>","range":[0,3],"uid":"4f8ed0f0-d72e-48e2-b28e-9cda11505873","richText":true,"isActive":false,"expand":true}]},"children":[{"data":{"text":"<p>从右至左 右→左， 使用pr 找到第一个比所选元素小的元素</p>","uid":"5095b79a-356b-4282-8037-002f998925fb","expand":true,"richText":true,"isActive":false,"outerFrame":{"groupId":"b730a6b2-fc86-4fa5-ac6a-591e4c455e36","text":"这个过程，要求要有随机访问的能力"}},"children":[]},{"data":{"text":"<p>从左至右 左→右， 使用pl找到第一个比所选元素大的元素</p>","uid":"7c4f48b1-02f8-45fa-9667-157ba57c3497","expand":true,"richText":true,"isActive":false,"outerFrame":{"groupId":"b730a6b2-fc86-4fa5-ac6a-591e4c455e36","text":"这个过程，要求要有随机访问的能力"}},"children":[]},{"data":{"text":"<p>循环结束，如果pl != l，则交换位置，此时完成左右切分</p>","uid":"f6a02d73-3258-417f-a005-cea94ac06177","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>结果断言，分区结束时，分区函数所返回的索引，左侧一定都&lt;=, 右侧一定都&gt;=</p>","uid":"2066f043-1659-40c5-847a-4bf86c26b6c2","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>问题</p>","uid":"6dd39aaa-c4c5-4d25-aa79-9701192ce786","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>颠倒1,2顺序，即先从左往右找&gt;, 从右往左找&lt;</p>","uid":"79806195-bacd-4451-bbb0-06971ec6ea74","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>pl 可能到达了很右边（比如最右侧）</p>","uid":"840beabc-97c4-41b2-bfaa-e2409c9161d2","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>pr 往左找时立刻碰到pl = pr </p>","uid":"a703c9e7-286d-487a-9174-ef2f03bd88be","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>循环出来后，pl!=l，交换位置，但是不满足partition条件</p>","uid":"af565a98-f645-4372-851c-51fefe577974","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>举例:9&nbsp;&nbsp;8 7 6 10</p>","uid":"6c3e7977-03ec-4868-b7af-7cdf6f92d1af","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>颠倒处理结果10 8 7 6 9</p>","uid":"587c1ef9-ef2a-45bb-83a6-919b2b2c6de0","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>不满足断言</p>","uid":"f3b3b950-5ca5-4663-8e60-f9c033aa6de5","expand":true,"richText":true,"isActive":false},"children":[]}]}]}]},{"data":{"text":"<p>pl起始位置</p>","uid":"0c70775f-90ea-4d67-9040-32d50820b2ac","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>假设从l + 1 开始</p>","uid":"5f664d18-dd48-482c-a98d-b3918a8ceff2","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>循环结束时是用pl和l位置交换，那么如果右侧没有&lt; pl的，则会造成误判，因为pl = l+1 且pl &gt;= l +1</p>","uid":"1d24d573-a4b6-4754-b2e1-4fad31b2f9ee","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>其实假设右侧一定有&lt;seq[l]，否则循环结束时交换位置一定有问题</p>","uid":"844841d7-b2da-4f40-83e0-3e07e904e350","expand":true,"richText":true,"isActive":false},"children":[]}]}]}]}]}]}]},{"data":{"text":"<p>对左子序列做快排</p>","uid":"b7487ab0-c0b4-48b4-a502-3d7ad622388c","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>对右子序列做快排</p>","uid":"2a668fa9-d109-4eef-a227-c0a0f2845b0c","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>复杂度分析</p>","uid":"34e96443-aa62-4058-9f8b-7be2a019a0bf","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>最优o(nlogn)</p>","uid":"913c7e63-f6df-44e3-8bb8-bb6dec6ae606","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>每次将序列对半分</p>","uid":"eacb1d6a-373d-43f3-90fb-4f68580fbfa8","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>分层log(n)次</p>","uid":"78d281fc-a7a9-41ec-8b36-bff2af81216b","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>每次要进行约n次的比较（上述的循环过程 右左 左右）</p>","uid":"4c3b5d63-af60-4752-bff0-ae50a1a5d6a4","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>最差(o(n^2))</p>","uid":"efbc164e-9f4c-4e4a-90a1-6f10d7c8e945","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>适用于完全逆序或者完全顺序</p>","uid":"8dfaae98-0c88-4a69-b0d5-de1b38b03251","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>完全顺序，每次都切分成1,(n-1) 个</p>","uid":"baf8e312-cfc4-417d-baf9-6d07fd0276a9","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>共需要分层 n 次</p>","uid":"3728a7d6-a1fd-4ad0-94d7-be530c92da66","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>完全逆序，每次都切分成(n-1), 1 个</p>","uid":"326bdd72-3260-40fa-a73b-b1449daf35ac","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>共需要分层 n 次</p>","uid":"a3690fb9-6968-4f55-bc3e-bae53d44369a","expand":true,"richText":true,"isActive":false},"children":[]}]}]}]},{"data":{"text":"<p>排序前建议随机打乱</p>","uid":"7c437ee6-ab84-4232-ab92-521d1cf8a947","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">堆排序</span></p>","uid":"920f033c-94b4-462d-8c80-d74908f808b2","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>大规模数据排序</p>","uid":"16078a2a-2e0d-4981-9d6a-19f9d02c5aa6","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>桶排序</p>","uid":"7ed5b4cd-a93f-4d91-87b8-8eee1d7db4f3","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>冒泡排序</p>","uid":"a3fd7a82-7829-4697-bea7-0e682480965f","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>思想</p>","uid":"fb12191d-ae05-4695-b7a7-8b568af5142c","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>序列仍然切为两部分，右侧有序，左侧无序</p>","uid":"a78356ae-1f80-4420-9543-b133104c812d","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>每次遍历，将左侧最大元素调至最右侧</p>","uid":"3247fe21-6c3e-4c2f-80a0-a48ad4924e46","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>实现</p>","uid":"0c6426e3-8960-4d41-9c5e-240cadbadbe3","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>双次循环 range(0, n-1)</p>","uid":"8b0cb1af-3618-4d4c-a46c-64877ae3c1dd","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>内循环是range(0, n-i-1)</p>","uid":"cb52b668-b083-4a12-a987-0cb1fee0b4b2","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>比较大小，交换相邻位置</p>","uid":"f75028a9-ed1c-44da-bd2c-f0260e7ce56a","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>复杂度: o(n^2)</p>","uid":"4c84b7d1-e764-4076-a2f4-1509e38bdca6","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>查找</p>","uid":"b15b1dc9-8dca-44ea-a855-945f3ca319d9","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>顺序查找</p>","uid":"9b5e2cd8-bfae-4cb2-b475-967295ba5919","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>二分查找</p>","uid":"88ae163b-b00c-464a-92b2-507ea0f506e5","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>要先排序</p>","uid":"81028fac-e6f5-4685-aebc-092e4c51d839","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>二叉查找树</p>","uid":"e265863e-4883-4a8e-b1db-84f725924ec9","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>普通二叉查找树</p>","uid":"6732f396-6728-4e62-a6fd-d6ebbb1bbee3","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>最坏情况会退化成链表</p>","uid":"cb3ae7e5-e4f2-4c07-8032-175ed3e166a4","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>红黑树</p>","uid":"ef5364a2-00a8-43fc-984a-566439f74d3b","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>源自2-3-4平衡树，是2-3-4平衡树的二叉等效表示</p>","uid":"43e23815-529e-4ec9-873e-0f84f7e7fc2a","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>特点</p>","uid":"d36d995c-7d46-4bdb-8669-1f57d25cb5d3","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>任意节点到其所有叶子节点的黑高相等（经过的黑链接数量）</p>","uid":"1f267cd8-a122-477d-9d2e-2565913d78ef","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>不能有连续的红链接</p>","uid":"9c16a59e-2e3d-45d9-9bc9-70fd23ef403f","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>红链接只能是左链接</p>","uid":"21ff4a39-af1e-476a-aefb-e8dc86695327","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>插入算法</p>","uid":"f292eaf2-7f53-4bbf-99f6-9a2e0ed1f0b9","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>左旋、右旋、翻转</p>","uid":"20f8f97b-9cd7-4f5a-ba6e-fff4cdf6edc7","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">删除算法</span></p>","uid":"8c5657ff-c995-4bcd-aa5e-3e2fcfef1e5a","expand":true,"richText":true,"isActive":false},"children":[]}]}]}]},{"data":{"text":"<p>字符串排序</p>","uid":"ec9102b4-471b-4460-ac34-dd9a81a37501","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>为什么不能像数字元素那样直接使用字符串自带的比较进行排序</p>","uid":"47b61740-4ab4-4d3f-9839-f6faddcb417f","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>比较次数与字符串长度有关，性能不稳定，比较的效率低</p>","uid":"49343cee-6ba6-4983-a654-334866d79676","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>计数排序法</p>","uid":"b5def537-7ca0-4db1-9b36-b4bed3ed0629","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>键频率、索引排序</p>","uid":"e83d78a7-a065-401c-8702-69ce4e43b463","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>统计各个键的频数</p>","uid":"652fc559-4225-4065-9e70-cb7e68e8581a","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>按照各个键及其频数计算起始索引</p>","uid":"7b15ea1c-80f0-4454-a98b-1355061857de","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>重排及写回</p>","uid":"7a5e233c-a09a-48a7-b6d8-e007700c8385","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>最终结果：是的相同的键，连续分布</p>","uid":"7ec1aebb-55ca-49d6-b1e2-c47c7fbc6228","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>低位优先排序（LSD）</p>","uid":"adbdb5ef-643c-423e-a5a9-7605c3bfd993","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>从后往前，因此要等长</p>","uid":"93b019cc-d9cb-4b6a-81e0-c44955d073e2","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>从后往前遍历，每一轮都取字符串的特定位置，进行键频率和索引排序</p>","uid":"619ca3af-d9a8-42ea-8745-62a2ab3f0b69","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>键值就是字符串位置的字符值，实际上只是要保证相同的字符经过处理后要连续分布</p>","uid":"39b3f7dd-9012-4e39-b0ce-ab2cb220642c","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>所谓同一区间是指该区间的频数相同且键相同</p>","uid":"fbad7a11-2f58-4ca5-8d5a-48c9266e3b74","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>在后续演变的排序算法中，<span style=\"color: rgb(244, 78, 59);\">键就是对应位置的字符</span></p>","uid":"6d2a9e31-e5fa-4477-8610-04a29a498014","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>准则：从后往前看，假设在Kth位置，那么，如果(0-K-1)的位置相同，则顺序取决于Kth 位置的排序， 如果(0-K-1)的位置不相同，那么本次处理后的顺序可能会被打乱，且不重要，因为顺序取决于(0-K-1)位置的顺序关系</p>","uid":"d0f61d90-09fe-430e-9c15-1cf68d809150","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>可能同时存在</p>","uid":"3e27b8c3-7127-4684-92f6-a4ffa4ea605c","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>A vs C（0，K-1）不相同，K位置相同</p>","uid":"e30cfbe4-4819-468f-9ed5-61e55b29fadb","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>顺序取决于（0, K-1）</p>","uid":"d85cd7f7-ffda-4a36-b903-4796a5de571e","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>会调整A and C 处于同一区间， 但无意义</p>","uid":"8d3ee626-074a-41c8-9a18-aea3577f8abe","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>A vs B（0, K-1） 不相同，K位置不同</p>","uid":"7f136d6e-cb13-4eda-92a5-e999cd4de0f1","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>顺序取决于（0, K-1）</p>","uid":"678c70a4-e619-4263-841b-4c7906bb3462","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>调整A and B在不同区间，但无意义</p>","uid":"d95e052a-97a8-4333-9285-d8cbee2bad23","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>A vs D (0,K-1) 相同，K位置相同</p>","uid":"fd2e3530-2e27-4168-a30f-f86308de3476","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>顺序取决于K+1位置的分布</p>","uid":"dd0d008a-5a01-4ec6-96b9-5987594b53eb","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>A vs E (0,K-1) 相同，K位置不相同</p>","uid":"9f853acf-a040-432a-ae9e-38fce011c824","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p><span style=\"color: rgb(244, 78, 59);\">顺序取决于K位置</span></p>","uid":"a5b6ea6c-34ad-43ec-9444-e168d8142ae6","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>这个和思维惯性：先粗略排序，再内部排序的思维是<span style=\"color: rgb(244, 78, 59);\">不同的</span></p>","uid":"8c11e7b7-980b-46db-b3f0-2a8270da161d","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>为什么是从右往左？</p>","uid":"ba9727b4-c121-46d8-823c-10f267e99f34","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>排序优先级从低到高，最后的高优先级的排序可以覆盖低优先级的</p>","uid":"6e14f1b9-a30a-4557-ba26-fe271f1df717","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>特点：字符串的中的每个字符范围R远小于要排序的数组长度N，从而这种算法具备优势</p>","uid":"6d5b9bbb-7d93-4f14-a629-f5891b112543","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>限制：待排序的字符串长度必须相等</p>","uid":"df998dbc-fe03-45d6-8df4-68e92cfdef71","expand":true,"richText":true,"isActive":false},"children":[]}]}]},{"data":{"text":"<p>高位优先（MSD）</p>","uid":"ff3f571b-044f-433a-a42d-f59aaa89e4f3","expand":true,"richText":true,"isActive":false},"children":[]}]}]}],"smmVersion":"0.14.0-fix.1"},"theme":{"template":"classic4","config":{}},"view":{"transform":{"scaleX":1,"scaleY":1,"shear":0,"rotate":0,"translateX":-838,"translateY":-2000,"originX":0,"originY":0,"a":1,"b":0,"c":0,"d":1,"e":-838,"f":-2000},"state":{"scale":1,"x":-838,"y":-2000,"sx":-838,"sy":-2200}}}