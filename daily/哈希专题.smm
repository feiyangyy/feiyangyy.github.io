{"layout":"logicalStructure","root":{"data":{"text":"<p>哈希</p>","expand":true,"uid":"c07cbdcb-06ea-455d-9907-7701b080096d","richText":true,"isActive":false,"imgMap":{}},"children":[{"data":{"text":"<p>1. 哈希函数</p>","uid":"1e716cc5-74fb-4d50-94e5-5ef799caf174","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>多项式哈希</p>","uid":"474e645c-44da-4f94-be3f-12b19d98136b","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>Murmur哈希</p>","uid":"ea38c5b7-e78e-43c0-9645-3b8fc27d479e","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>要点: 要快速且分布均匀</p>","uid":"6af7defc-ce75-4b59-9a08-1160db2e415d","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>2. 底层存储（链地址法）</p>","uid":"3789514a-dfd5-441e-b0d3-6523b19eb65f","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>std::vector&lt;std::list&lt;std::pair&lt;string, value&gt;&gt;&gt; </p>","uid":"4a2f87c6-e81b-4c3a-a7fc-0080fecd301a","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>数组，数组的元素是一个链表，链表存储的元素是一个个键值对</p>","uid":"91810341-2187-46c8-8daa-a5f3a875937c","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>key要带入，进一步匹配</p>","uid":"e21a0cc7-d95c-4861-b214-d59c44b78810","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>数组可能需要支持动态扩容，参考负载因子（了解即可）</p>","uid":"64902f58-8854-459e-8af9-eb567dff7c6a","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>3. 匹配过程</p>","uid":"13c94c81-c5a4-4a63-a4aa-afa881a00062","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>计算哈希</p>","uid":"a8322dda-059a-4530-96de-bff3f3aa9068","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>哈希到数组索引</p>","uid":"6cd0fa27-7944-4bea-8eed-5a358637e8ad","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>数组索引取出链表，没有则新建</p>","uid":"70f3b6ee-e372-40b9-b646-c7aec3cc85bb","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>逐个遍历，找到匹配元素</p>","uid":"b0ce2862-466e-4ed8-9ebb-e4450dc342c2","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>4. 要点</p>","uid":"4cbf260c-ab9c-4e28-a045-654c43022997","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>哈希函数的性能比较重要，而且链表不宜太长</p>","uid":"9ce6200d-59cd-482b-9713-8f026f08a509","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>某些情况下，链表过长时，可能会转变成红黑树</p>","uid":"cc3ce6a4-bfd9-4049-a5e9-7ee8845ca98b","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>扩容</p>","uid":"0e8b9111-8fe5-4442-9490-3eb8b8293604","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>扩容后，要重新计算哈希键值对</p>","uid":"292635fa-17fc-4558-8294-e5a5d4c43938","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>扩容后，一个哈希对应的数组索引可能会发生变化</p>","uid":"5c78820c-90ab-4b36-b6aa-e69a30692dd3","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>涉及算法：LRU/LFU</p>","uid":"21eb23f1-5ae8-4e47-8e01-1228761cfa14","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>LRU(最久未使用）</p>","uid":"5bc9f72e-0758-46db-8ad2-f44ad3f54b0b","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>get/put 的效率要做到O(1)</p>","uid":"0b6a0f56-1426-4a8f-b5a7-f7733f5cddd3","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>O(1)的复杂度内做到修改队列</p>","uid":"a392151e-b95a-4e52-9122-30f89bf65cea","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>单靠hash 不行，即便有比较策略，也需要o(n)的时间才能找到最久未使用的</p>","uid":"642fab63-c8e1-4524-9fc0-da930cbf6571","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>需要list，给定list中某节点后，删除可以做到O(1), 链表头插入也可以做到O(1)</p>","uid":"9c5c2c0d-4ac7-4a8a-b748-7b03ab162c33","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>要通过单个node找到前驱后继，必须要双链表</p>","uid":"25fc4492-92d5-4e5c-b8e1-e43c05ba59e3","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>node从原位置删除，并在头部插入</p>","uid":"7ddaefee-3f7e-4904-aa7d-b5d790055991","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>put 超容</p>","uid":"43ef71b5-8695-4c69-af40-1609e82ecff8","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>需要删除list尾部元素</p>","uid":"18beccbb-6cc7-41a2-9915-b1305f18db7b","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>需要一个哨兵节点tail, 通过tail-&gt;prev， 动态找到链表尾部并删除</p>","uid":"b178615e-42a4-47e7-af0b-97fc8a5f135e","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>插入新节点到头部</p>","uid":"77a865e9-e1eb-4c5d-8b70-af25112620dd","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>核心：容量满时，淘汰最久未使用</p>","uid":"0dee549a-acf1-447e-a6e0-bdb45b31fe01","expand":false,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>不会存在多个元素同时最久未使用</p>","uid":"75b4a84b-581d-482b-87f5-66d86a2831c6","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>结构：</p>","uid":"b6979805-cda7-48c3-8fc9-f6e8e3d9eef4","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>hash</p>","uid":"7f5d8dd2-6422-4546-8aa3-7c55a229850a","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>get/update/put 快速访问</p>","uid":"007acc9c-64bf-40e9-8582-00e024d697af","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>双向链表</p>","uid":"d4d5b2cc-cdc2-4d51-82e6-9090d2e49fc0","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>LRU管理队列</p>","uid":"fb7ece9e-12c7-4e15-91b6-a95e08eca1cb","expand":true,"richText":true,"isActive":false},"children":[]}]}]}]},{"data":{"text":"<p>LFU（最少未使用）</p>","uid":"e1d68c6c-7091-4930-aa59-06d49641fc19","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>叠加了两个规则：<span style=\"color: rgb(244, 78, 59);\">最少未使用+最久未使用</span></p>","uid":"36f62e76-e5d3-4fd7-8407-4b010d9a329f","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>可能同时存在两个最少未使用的元素，比如多个put的元素，但从未访问过，使用频率均为1</p>","uid":"b4504761-2291-4a0d-8a84-1e68caed2b5e","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>结构</p>","uid":"c8f73d49-f30a-4e89-860e-85f034f6fe60","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>hash&lt;freq, list&gt; queues 其中list 是使用LRU策略的链表</p>","uid":"92c29798-1bab-40ce-b6d0-34ade552a915","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>hash&lt;key, node*&gt; store， O(1) 找到key</p>","uid":"fe5b1575-396f-45f9-9c3f-5533f427e898","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>get</p>","uid":"1af8595c-c9e5-4df8-a706-0145b6cb4265","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>找到key所对应node</p>","uid":"a85103de-6399-42cf-828c-db7a0e490f10","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>找到node 所在freq的链表</p>","uid":"b99ebc03-7a2c-43d7-a180-532bcc6a5791","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>从此链表取出node, 更新此node freq,&nbsp;&nbsp;并更新到对应的freq 链表的头部（如无则创建）</p>","uid":"7f738245-6910-40b6-a07a-3b7afad64307","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>旧freq 检查是否为空，为空则删除. 同时检查min_freq 是否为此freq, 是则更新min_freq</p>","uid":"81cd97b9-7e48-4059-8a52-fc12422e2c6a","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>put</p>","uid":"33c013ba-6902-4930-86ed-af8072d91a5c","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>仅更新: 走get， 并更新值</p>","uid":"a5e098f7-157a-4264-9f60-4d2d87ecbe9f","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>新建Node</p>","uid":"a53de992-dd00-425e-96a7-bb98f57b2a58","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>如果队列满</p>","uid":"2deacc3e-2c0d-42a4-84c9-bcd7bfc7ae4b","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>找到min_freq对应的链表</p>","uid":"b7e537ee-d0ac-4c65-b6be-9a3b47133494","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>删除链表尾部元素</p>","uid":"33bb9f09-01a5-4542-ac2f-d4fc119d8982","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>删除store对应元素</p>","uid":"8a9d79cb-4c71-4a97-be26-1614022dace7","expand":true,"richText":true,"isActive":false},"children":[]}]},{"data":{"text":"<p>插入元素，并在queues_[1] 对应的lru list 头部插入，更新min_freq=1</p>","uid":"57b53b1f-2bb1-431a-8409-d0e2e128d3a4","expand":true,"richText":true,"isActive":false},"children":[]}]}]}]}]}],"smmVersion":"0.14.0-fix.1"},"theme":{"template":"classic4","config":{}},"view":{"transform":{"scaleX":1,"scaleY":1,"shear":0,"rotate":0,"translateX":-726.214285714286,"translateY":-185.38095238095275,"originX":0,"originY":0,"a":1,"b":0,"c":0,"d":1,"e":-726.214285714286,"f":-185.38095238095275},"state":{"scale":1,"x":-726.214285714286,"y":-185.38095238095275,"sx":-726.214285714286,"sy":-185.38095238095275}}}